version: 0.2
phases:
  install: # Install AWS CLI, Maven, Trivy
    runtime-versions:
      java: latest
    commands:
       - apt-get update
       - apt-get install -y jq
       - apt-get install -y git python3 python3-pip
       - pip install awscli
       - curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
       - chmod +x ./aws-iam-authenticator
       - mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
       - apt-get install -y wget apt-transport-https gnupg lsb-release
       - wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | tee /usr/share/keyrings/trivy.gpg > /dev/null
       - echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | tee -a /etc/apt/sources.list.d/trivy.list
       - apt-get update && apt-get install -y trivy
       - REPOSITORY_URI=824813378441.dkr.ecr.us-east-1.amazonaws.com/backend

  pre_build: # Check availability of Maven and its version
    commands:
      - echo -e '\nMaven version:'
      - mvn --version
      - trivy --version
      - python -V
      
  build: # Build Docker image, tag it with the commit SHA, scan the Docker image using Trivy, push the Docker image to ECR
    commands:
      - cd code/app && mvn clean package && cd ../..
      - cd code/app 
      - docker build -t $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION . 
      - cd ../..
      - docker tag $REPOSITORY_URI:$CODEBUILD_RESOLVED_SOURCE_VERSION $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - mkdir -p securityhub
      - trivy -d image --no-progress --ignore-unfixed --exit-code 0 --severity HIGH,CRITICAL,MEDIUM,LOW $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_RESOLVED_SOURCE_VERSION
cache:
  paths:
    - '/root/.m2/**/*'
